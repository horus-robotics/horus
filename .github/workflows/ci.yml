name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libclang-dev llvm-dev libudev-dev libopencv-dev libasound2-dev

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Run tests
        run: cargo test --all-features --workspace

      - name: Run tests (release mode)
        run: cargo test --all-features --workspace --release

  clippy:
    name: Clippy (Lints)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libclang-dev llvm-dev libudev-dev libopencv-dev libasound2-dev

      - name: Run clippy
        run: cargo clippy --all-features --workspace -- -D warnings -A dead_code -A unused_variables -A clippy::approx_constant -A clippy::manual_clamp -A clippy::not_unsafe_ptr_arg_deref -A clippy::manual_strip -A clippy::type_complexity -A clippy::field_reassign_with_default -A clippy::explicit_counter_loop -A clippy::explicit_iter_loop -A clippy::upper_case_acronyms -A clippy::needless_range_loop

  fmt:
    name: Rustfmt (Formatting)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Check formatting
        run: cargo fmt --all -- --check

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-22.04]
        rust: [stable, beta]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libclang-dev llvm-dev libudev-dev libopencv-dev libasound2-dev

      - name: Build (debug)
        run: cargo build --workspace

      - name: Build (release)
        run: cargo build --workspace --release

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libclang-dev llvm-dev libudev-dev libopencv-dev libasound2-dev

      - name: Check documentation
        run: cargo doc --no-deps --all-features --workspace
        env:
          RUSTDOCFLAGS: -D warnings

  python-bindings:
    name: Python Bindings
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libclang-dev llvm-dev libudev-dev libopencv-dev libasound2-dev

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install maturin
        run: pip install maturin

      - name: Build Python bindings
        run: |
          cd horus_py
          maturin build --release

  c-bindings:
    name: C Bindings
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install build dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential

      - name: Build C bindings
        run: |
          cd horus_c
          cargo build --release
